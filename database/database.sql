
CREATE TABLE LOG (
    ID SERIAL NOT NULL ,
    LOG_DATE timestamp DEFAULT CURRENT_TIMESTAMP,
    LOG_MESSAGE VARCHAR(255),
    LOG_KEY VARCHAR(255),
    LOG_LEVEL VARCHAR(10),
    PRIMARY KEY (ID)
);

INSERT INTO LOG (LOG_DATE, LOG_MESSAGE, LOG_KEY, LOG_LEVEL)
VALUES
    ('2023-10-07 10:15:00', 'User logged in', 'user123', 'INFO'),
    ('2023-10-07 11:30:45', 'Error in database connection', 'app456', 'ERROR'),
    ('2023-10-07 12:45:30', 'Data imported successfully', 'import789', 'INFO'),
    ('2023-10-07 14:20:15', 'Invalid input received', 'app123', 'WARN'),
    ('2023-10-08 08:00:00', 'System started', 'system', 'INFO'),
    ('2023-10-08 09:30:20', 'File not found', 'app789', 'ERROR'),
    ('2023-10-08 10:45:10', 'User registered', 'user456', 'INFO'),
    ('2023-10-08 14:15:45', 'Configuration updated', 'app123', 'INFO'),
    ('2023-10-09 12:30:00', 'Database backup completed', 'backup', 'INFO'),
    ('2023-10-09 13:45:30', 'Security breach detected', 'app789', 'ERROR'),
    ('2023-10-10 09:15:00', 'Payment received', 'payment123', 'INFO'),
    ('2023-10-10 10:30:20', 'Out of memory', 'app456', 'ERROR'),
    ('2023-10-10 12:00:15', 'User session expired', 'user123', 'WARN'),
    ('2023-10-11 08:30:00', 'Server restart initiated', 'server', 'INFO'),
    ('2023-10-11 09:45:45', 'File uploaded successfully', 'upload789', 'INFO'),
    ('2023-10-11 11:15:30', 'Invalid API request', 'api456', 'ERROR'),
    ('2023-10-12 10:00:00', 'Password changed', 'user123', 'INFO'),
    ('2023-10-12 11:30:20', 'Database connection restored', 'app456', 'INFO'),
    ('2023-10-12 13:00:45', 'Failed login attempt', 'user789', 'ERROR'),
    ('2023-10-12 14:45:15', 'Application shutdown', 'app123', 'INFO');
-- Inserting sample data into the LOG table


--WORK TIME TABLES


CREATE TABLE CLIENT (
    ID SERIAL NOT NULL ,
    CODE  VARCHAR(255),
    NOM VARCHAR(255),
    PRENOM VARCHAR(255),
    ADRESSE VARCHAR(255),
    EMAIL VARCHAR(255),
    TELEPHONE VARCHAR(255),
    PROFILE_IMAGE VARCHAR(255),
    PASSWORD VARCHAR(255),
    PRIMARY KEY (ID)
);


DROP TABLE IF EXISTS RESERVATION;
CREATE TABLE RESERVATION (
    ID SERIAL NOT NULL ,
    CODE VARCHAR(255) UNIQUE NOT NULL,
    PRICE_TOTAL VARCHAR(255),
    DATE_RESERVATION VARCHAR(255),
    CLIENT_ID INT NOT NULL,
    DATE_DEPART VARCHAR(255),
    NUMBER_DE_ADULETS INT,
    NUMBER_DE_ENFANTS INT,
    NUMBER_DE_BEBES INT,
    LHEURE_DEPART VARCHAR(255),
    LHEURE_ARRIVEE VARCHAR(255),
    DATE_ARRIVEE VARCHAR(255),
    VILLE_DEPART VARCHAR(255),
    VILLE_ARRIVEE VARCHAR(255),
    CONFIRMED BOOLEAN,
    CANCLED BOOLEAN,
    CONSTRAINT FK_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(ID)

);
CREATE TABLE AEROPORT (
    ID SERIAL NOT NULL ,
    CODE VARCHAR(255),
    NOM VARCHAR(255),
    ADRESSE VARCHAR(255),
   TELEPHONE VARCHAR(255),
   PRIMARY KEY (ID)
);


CREATE TABLE VILLE (
    ID SERIAL NOT NULL ,
    CODE VARCHAR(255),
    NOM VARCHAR(255),
    CODE_POSTAL VARCHAR(255),
    PRIMARY KEY (ID)
);


DROP TABLE VILLE_IMAGE;
CREATE TABLE VILLE_IMAGE (
    ID SERIAL NOT NULL ,
    IMAGE VARCHAR(255),
    VILLE_ID INT NOT NULL,
    CONSTRAINT FK_CITY FOREIGN KEY (VILLE_ID) REFERENCES VILLE(ID),
    PRIMARY KEY (ID)
);


CREATE TABLE SOCIETE_AERIENNE (
                                  ID SERIAL NOT NULL ,
                                  CODE VARCHAR(255),
                                  NOM VARCHAR(255),
                                  ADRESSE VARCHAR(255),
                                  TELEPHONE VARCHAR(255),
                                  PRIMARY KEY (ID)
);

--ADD COLUMN TO TABLE SOCIETE_AERIENNE

ALTER TABLE SOCIETE_AERIENNE
    ADD COLUMN LOGO varchar(255) ;

CREATE TABLE VOL (
                     ID SERIAL NOT NULL ,
                     CODE VARCHAR(255),
                     HEURE_DEPART VARCHAR(255),
                     HEURE_ARRIVEE VARCHAR(255),
                     DATE_DEPART VARCHAR(255),
                     DATE_ARRIVEE VARCHAR(255),
                     VILLE_DEPART VARCHAR(255),
                     VILLE_ARRIVEE VARCHAR(255),
                     NOMBRE_DE_PLACES INT,
                     PRIX VARCHAR(255),
                     AEROPORT_ID INT NOT NULL,
                     SOCIETE_AERIENNE_ID INT NOT NULL,
                     VILLE_ID INT ,
                     CONSTRAINT FK_AEROPORT FOREIGN KEY (AEROPORT_ID) REFERENCES AEROPORT(ID),
                     CONSTRAINT FK_VILLE FOREIGN KEY (VILLE_ID) REFERENCES VILLE(ID),
                     CONSTRAINT FK_SOCIETE_AERIENNE FOREIGN KEY (SOCIETE_AERIENNE_ID) REFERENCES SOCIETE_AERIENNE(ID),
                     PRIMARY KEY (ID)
);



CREATE TABLE VOL_EXTRAS (
    ID SERIAL NOT NULL ,
    TYPE VARCHAR(255),
    PRIX VARCHAR(255),
    DESCRIPTION VARCHAR(255),
    VOL_ID INT NOT NULL,
    CONSTRAINT FK_VOL FOREIGN KEY (VOL_ID) REFERENCES VOL(ID),
    PRIMARY KEY (ID)
);
--TYPE VOL_EXTRACTS TYPES  FOOD - ASSURANCE - HOTEL - FIRST CLASS - BUSINESS CLASS - ECONOMY CLASS

CREATE TABLE RESERVATION_VOL (
    ID SERIAL NOT NULL ,
    RESERVATION_CODE VARCHAR(255) NOT NULL,
    VOL_ID INT NOT NULL,
    CONSTRAINT FK_RESERVATION FOREIGN KEY (RESERVATION_CODE) REFERENCES RESERVATION(CODE),
    CONSTRAINT FK_VOL FOREIGN KEY (VOL_ID) REFERENCES VOL(ID),
    PRIMARY KEY (ID)
);





CREATE TABLE ADMINISTRATEUR (
    ID SERIAL NOT NULL ,
    CODE VARCHAR(255),
    NOM VARCHAR(255),
    PRENOM VARCHAR(255),
    ADRESSE VARCHAR(255),
    EMAIL VARCHAR(255),
    TELEPHONE VARCHAR(255),
    PASSWORD VARCHAR(255),
    PRIMARY KEY (ID)
);

-- CREATE PAYMENT TABLE
CREATE TABLE PAYMENT (
PAYMENTID SERIAL NOT NULL ,
RESERVATION_CODE VARCHAR(255) NOT NULL,
PAYMENTAMOUNT DECIMAL(10, 2),
PAYMENTDATE timestamp DEFAULT CURRENT_TIMESTAMP,
PAYMENTSTATUS VARCHAR(255),
PAYMENTMETHOD VARCHAR(255),
FOREIGN KEY (RESERVATION_CODE) REFERENCES RESERVATION(CODE)
);
